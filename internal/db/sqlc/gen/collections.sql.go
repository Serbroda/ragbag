// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: collections.sql

package sqlc

import (
	"context"
)

const insertCollection = `-- name: InsertCollection :one
INSERT INTO collections (sid,
                         created_at,
                         updated_at,
                         space_id,
                         parent_id,
                         name)
VALUES (?1,
        CURRENT_TIMESTAMP,
        CURRENT_TIMESTAMP,
        ?2,
        ?3,
        ?4) RETURNING id, sid, space_id, parent_id, name, visibility, created_at, updated_at, deleted_at
`

type InsertCollectionParams struct {
	Sid      string `db:"sid" json:"sid"`
	SpaceID  int64  `db:"space_id" json:"space_id"`
	ParentID *int64 `db:"parent_id" json:"parent_id"`
	Name     string `db:"name" json:"name"`
}

func (q *Queries) InsertCollection(ctx context.Context, arg InsertCollectionParams) (Collection, error) {
	row := q.db.QueryRowContext(ctx, insertCollection,
		arg.Sid,
		arg.SpaceID,
		arg.ParentID,
		arg.Name,
	)
	var i Collection
	err := row.Scan(
		&i.ID,
		&i.Sid,
		&i.SpaceID,
		&i.ParentID,
		&i.Name,
		&i.Visibility,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
