// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: bookmarks.sql

package sqlc

import (
	"context"
)

const insertBookmark = `-- name: InsertBookmark :one
INSERT INTO bookmarks (sid,
                       created_at,
                       updated_at,
                       collection_id,
                       url,
                       title,
                       description)
VALUES (?1,
        CURRENT_TIMESTAMP,
        CURRENT_TIMESTAMP,
        ?2,
        ?3,
        ?4,
        ?5) RETURNING id, sid, collection_id, url, title, description, created_at, updated_at, deleted_at
`

type InsertBookmarkParams struct {
	Sid          string  `db:"sid" json:"sid"`
	CollectionID int64   `db:"collection_id" json:"collection_id"`
	Url          string  `db:"url" json:"url"`
	Title        *string `db:"title" json:"title"`
	Description  *string `db:"description" json:"description"`
}

func (q *Queries) InsertBookmark(ctx context.Context, arg InsertBookmarkParams) (Bookmark, error) {
	row := q.db.QueryRowContext(ctx, insertBookmark,
		arg.Sid,
		arg.CollectionID,
		arg.Url,
		arg.Title,
		arg.Description,
	)
	var i Bookmark
	err := row.Scan(
		&i.ID,
		&i.Sid,
		&i.CollectionID,
		&i.Url,
		&i.Title,
		&i.Description,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
