// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: spaces.sql

package sqlc

import (
	"context"
)

const insertSpace = `-- name: InsertSpace :one
INSERT INTO spaces (sid,
                    created_at,
                    updated_at,
                    owner_id,
                    name)
VALUES (?1,
        CURRENT_TIMESTAMP,
        CURRENT_TIMESTAMP,
        ?2,
        ?3) RETURNING id, sid, owner_id, name, created_at, updated_at, deleted_at
`

type InsertSpaceParams struct {
	Sid     string `db:"sid" json:"sid"`
	OwnerID int64  `db:"owner_id" json:"owner_id"`
	Name    string `db:"name" json:"name"`
}

func (q *Queries) InsertSpace(ctx context.Context, arg InsertSpaceParams) (Space, error) {
	row := q.db.QueryRowContext(ctx, insertSpace, arg.Sid, arg.OwnerID, arg.Name)
	var i Space
	err := row.Scan(
		&i.ID,
		&i.Sid,
		&i.OwnerID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
