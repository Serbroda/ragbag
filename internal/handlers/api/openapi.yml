openapi: 3.0.3
info:
  title: Authentication Api
  version: 1.0.0

paths:
  /spaces:
    get:
      summary: Get all spaces
      operationId: getSpaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceDtoList'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /spaces/{spaceId}:
    get:
      summary: Get a space
      operationId: getSpace
      parameters:
        - in: path
          name: spaceId
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceDto'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /spaces/{spaceId}/collections:
    get:
      summary: Get all collections of a space
      operationId: getCollections
      parameters:
        - in: path
          name: spaceId
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionDtoList'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Create a collection
      operationId: createCollection
      parameters:
        - in: path
          name: spaceId
          schema:
            $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCollectionDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionDto'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /spaces/{spaceId}/collections/{collectionId}:
    get:
      summary: Get a collection
      operationId: getCollection
      parameters:
        - in: path
          name: spaceId
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: collectionId
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionDto'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update a collection
      operationId: updateCollection
      parameters:
        - in: path
          name: spaceId
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: collectionId
          schema:
            $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCollectionDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionDto'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Delete a collection
      operationId: deleteCollection
      parameters:
        - in: path
          name: spaceId
          schema:
            $ref: '#/components/schemas/Id'
        - in: path
          name: collectionId
          schema:
            $ref: '#/components/schemas/Id'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:

    Id:
      type: string
      example: "-NDveu-9Q"
    Error:
      type: object
      properties:
        message:
          type: string

    SpaceDto:
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
      required:
        - id
        - name

    SpaceDtoList:
      type: array
      items:
        $ref: '#/components/schemas/SpaceDto'

    CollectionDto:
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
        parentId:
          $ref: '#/components/schemas/Id'
      required:
        - id
        - name

    CollectionDtoList:
      type: array
      items:
        $ref: '#/components/schemas/CollectionDto'

    CreateCollectionDto:
      properties:
        name:
          type: string
        parentId:
          $ref: '#/components/schemas/Id'
      required:
        - name

    UpdateCollectionDto:
      properties:
        name:
          type: string
        parentId:
          $ref: '#/components/schemas/Id'
      required:
        - name

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NoContent:
      description: No Content
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: [ ]
